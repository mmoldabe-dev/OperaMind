/**
 * –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–∏ –∏ —Ä–∞–∑–≥–æ–≤–æ—Ä–æ–≤
 * –í—Å—Ç–∞–≤–∏—Ç—å –≤ templates/base.html –ø–µ—Ä–µ–¥ </body>
 */

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –æ—á–µ—Ä–µ–¥–∏
function updateQueueStatus() {
    fetch('/api/queue/status')
        .then(response => response.json())
        .then(data => {
            const statusEl = document.getElementById('queue-status');
            if (statusEl) {
                statusEl.innerHTML = `
                    <div class="queue-info">
                        <span class="badge">üîÑ –í –æ–±—Ä–∞–±–æ—Ç–∫–µ: ${data.currently_processing}</span>
                        <span class="badge">üìã –í –æ—á–µ—Ä–µ–¥–∏: ${data.queue_size}</span>
                        <span class="badge">‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: ${data.total_processed}</span>
                        ${data.total_errors > 0 ? `<span class="badge error">‚ùå –û—à–∏–±–æ–∫: ${data.total_errors}</span>` : ''}
                    </div>
                `;
            }
        })
        .catch(err => console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ç–∞—Ç—É—Å–∞:', err));
}

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
function updateConversationStatus(conversationId) {
    fetch(`/api/conversation/${conversationId}/status`)
        .then(response => response.json())
        .then(data => {
            const statusEl = document.getElementById(`conv-status-${conversationId}`);
            if (statusEl) {
                statusEl.textContent = data.status_display;
                statusEl.className = `status-badge status-${data.status}`;
            }
            
            // –ï—Å–ª–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ, –ø–µ—Ä–µ–∑–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç—Ä–∞–Ω–∏—Ü—É
            if (data.status === 'completed' && !data.has_analysis) {
                setTimeout(() => location.reload(), 1000);
            }
        })
        .catch(err => console.error('–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–∑–≥–æ–≤–æ—Ä–∞:', err));
}

// –ê–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞–∂–¥—ã–µ 3 —Å–µ–∫—É–Ω–¥—ã
setInterval(updateQueueStatus, 3000);

// –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞–∑–≥–æ–≤–æ—Ä–∞, –µ—Å–ª–∏ –º—ã –Ω–∞ –µ–≥–æ —Å—Ç—Ä–∞–Ω–∏—Ü–µ
const conversationId = document.body.dataset.conversationId;
if (conversationId) {
    setInterval(() => updateConversationStatus(conversationId), 3000);
}

// –ü–µ—Ä–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ä–∞–∑—É
updateQueueStatus();
if (conversationId) {
    updateConversationStatus(conversationId);
}